<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>底层相关 on Kyle&#39;s Notebook</title>
    <link>https://Kyle-Derrick.github.io/zh/tags/%E5%BA%95%E5%B1%82%E7%9B%B8%E5%85%B3/</link>
    <description>Recent content in 底层相关 on Kyle&#39;s Notebook</description>
    <generator>Hugo -- 0.148.1</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 22 Jul 2025 22:40:49 +0800</lastBuildDate>
    <atom:link href="https://Kyle-Derrick.github.io/zh/tags/%E5%BA%95%E5%B1%82%E7%9B%B8%E5%85%B3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何将内存缓冲区伪装成文件流</title>
      <link>https://Kyle-Derrick.github.io/zh/posts/tech/system_level/%E5%86%85%E5%AD%98%E7%BC%93%E5%86%B2%E5%8C%BA%E4%BC%AA%E8%A3%85%E6%96%87%E4%BB%B6%E6%B5%81/</link>
      <pubDate>Tue, 22 Jul 2025 22:40:49 +0800</pubDate>
      <guid>https://Kyle-Derrick.github.io/zh/posts/tech/system_level/%E5%86%85%E5%AD%98%E7%BC%93%E5%86%B2%E5%8C%BA%E4%BC%AA%E8%A3%85%E6%96%87%E4%BB%B6%E6%B5%81/</guid>
      <description>&lt;h2 id=&#34;1-fmemopenlinux-posix-标准&#34;&gt;1. fmemopen（Linux POSIX 标准）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：将内存缓冲区伪装成文件流（FILE*），支持标准文件 I/O 操作（如 fprintf、fscanf）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心机制&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;参数：buf（预分配内存指针）、size（缓冲区大小）、mode（读写模式，如 &amp;ldquo;r+&amp;quot;）。&lt;/li&gt;
&lt;li&gt;若 buf=NULL，则自动分配动态内存（需手动释放）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;避免磁盘 I/O&lt;/strong&gt;：处理内存中的数据（如解析网络报文）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;兼容文件 API&lt;/strong&gt;：第三方库仅支持 FILE* 参数时，将内存数据转为文件流。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码示例&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;```c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;char buffer[64];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;FILE *stream = fmemopen(buffer, sizeof(buffer), &amp;#34;w+&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fprintf(stream, &amp;#34;Hello, world!&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fclose(stream);  // 关闭时自动添加终止符（若空间允许）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;2-memorymodulewindows-第三方库&#34;&gt;2. MemoryModule（Windows 第三方库）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：直接从内存加载 DLL（无需落盘），返回模块句柄供调用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;核心机制&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;解析内存中的 PE 文件格式，模拟系统加载器行为（重定位、导入表修复）。&lt;/li&gt;
&lt;li&gt;支持通过 MemoryGetProcAddress 获取函数指针。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;加密 DLL 运行时解密&lt;/strong&gt;：避免恶意软件扫描磁盘文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络分发插件&lt;/strong&gt;：远程下载 DLL 后直接内存加载。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;对比与限制&#34;&gt;对比与限制&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特性&lt;/th&gt;
          &lt;th&gt;fmemopen (Linux)&lt;/th&gt;
          &lt;th&gt;MemoryModule (Windows)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;标准性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;POSIX 标准（非全平台支持）&lt;/td&gt;
          &lt;td&gt;第三方库（非系统原生）&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;内存管理&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;需预分配缓冲区或动态分配&lt;/td&gt;
          &lt;td&gt;自动处理内存分配与重定位&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;缓冲区溢出风险&lt;/td&gt;
          &lt;td&gt;需自行校验内存来源合法性&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
  </channel>
</rss>
